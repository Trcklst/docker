version: '3.1'

services:

  eureka:
    container_name: "eureka"
    image: trcklst/eureka:1.0.0
    environment:
      SERVER_PORT: 8761
      SPRING_PROFILE: default
    ports:
      - "8761:8761"

  rabbitmq:
    container_name: "rabbitmq"
    image: 'rabbitmq:3.6-management-alpine'
    ports:
      # The standard AMQP protocol port
      - '5672:5672'
      # HTTP management UI
      - '15672:15672'

  track-stream:
    container_name: "track-stream"
    image: trcklst/track-stream-service
    environment:
      SERVER_PORT: 8050
    ports:
      - 8050:8050
    depends_on:
      - eureka
      - tracks-db
      - rabbitmq

  track-upload:
    container_name: "track-upload"
    image: trcklst/track-upload-service
    environment:
      SERVER_PORT: 8040
    ports:
      - 8040:8040
    depends_on:
      - eureka
      - tracks-db
      - rabbitmq

  party:
    container_name: "party"
    image: trcklst/party-service
    environment:
      SERVER_PORT: 8030
    ports:
      - 8030:8030
    depends_on:
      - eureka
      - party-db
      - rabbitmq

  party-notifier:
    container_name: "party-notifier"
    image: trcklst/party-notifier-service
    environment:
      WS_SERVER_PORT: 3001
    ports:
      - 3001:3001
    depends_on:
      - notifier-db
      - rabbitmq

  subscription:
    container_name: "subscription"
    image: trcklst/subscription:0.0.1-SNAPSHOT
    environment:
      SERVER_PORT: 8060
      SPRING_PROFILE: docker
    ports:
      - "8060:8060"
    depends_on:
      - subscription_db
      - eureka

  authentication:
    container_name: "authentication"
    image: trcklst/authentication:0.0.1-SNAPSHOT
    environment:
      SERVER_PORT: 8083
      SPRING_PROFILE: docker
    ports:
      - "8083:8083"
    depends_on:
      - user_db
      - eureka

  register:
    container_name: "register"
    image: trcklst/register:0.0.1-SNAPSHOT
    environment:
      SERVER_PORT: 8070
      SPRING_PROFILE: docker
    ports:
      - "8070:8070"
    depends_on:
      - user_db
      - eureka

  youtube-search:
    container_name: "youtube-search"
    image: trcklst/youtube-search:0.0.1-SNAPSHOT
    environment:
      SERVER_PORT: 8010
      SPRING_PROFILE: docker
    ports:
      - "8010:8010"
    depends_on:
      - eureka

  zuul-server:
    container_name: "zuul-server"
    image: trcklst/zuul:0.0.1-SNAPSHOT
    environment:
      SERVER_PORT: 8888
      SPRING_PROFILE: docker
    ports:
      - "8888:8888"
    depends_on:
      - eureka

  user_db:
    container_name: "user_db"
    restart: always
    image: mongo
    environment:
      MONGO_INITDB_DATABASE: user
      MONGO_INITDB_ROOT_USERNAME: user
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - "27017:27017"

  subscription_db:
    container_name: "subscription_db"
    restart: always
    image: mongo
    command: mongod --port 27018
    environment:
      MONGO_INITDB_DATABASE: subscription
      MONGO_INITDB_ROOT_USERNAME: user
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - "27018:27018"

  tracks-db:
    container_name: "tracks-db"
    image: 'mongo'
    restart: always
    command: mongod --port 27019
    environment:
      - MONGO_INITDB_DATABASE=tracks
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=secret
    ports:
      - 27019:27019

  party-db:
    container_name: "party-db"
    image: 'mongo'
    restart: always
    command: mongod --port 27020
    environment:
      - MONGO_INITDB_DATABASE=party
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=secret
    ports:
      - 27020:27020

  notifier-db:
    container_name: "notifier-db"
    image: 'mongo'
    restart: always
    command: mongod --port 27021
    environment:
      - MONGO_INITDB_DATABASE=notifier
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=secret
    ports:
      - 27021:27021
